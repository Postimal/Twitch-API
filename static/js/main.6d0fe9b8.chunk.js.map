{"version":3,"sources":["components/NoMatch/error404.jpg","reducers/twitchReducer.js","api.js","utils.js","contexts/TwitchContext.js","components/ClipsList/ClipsList.js","components/StreamList/StreamList.js","components/GameList/GameList.js","components/Spinner/Spinner.js","components/Title/Title.js","components/HomeHeader/HomeHeader.js","components/Navigation/Navigation.js","components/TopStreams/TopStreams.js","components/TopGames/TopGames.js","components/Channel/ItemCarousel/ItemCarousel.js","components/Channel/ChannelPopularStream/ChannelPopularStream.js","components/Channel/Channel.js","components/Footer/Footer.js","components/NoMatch/NoMatch.js","components/ScrollToTop/ScrollToTop.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","twitchReducer","state","action","type","api","axios","create","headers","process","getThumbnail","arr","map","stream","newURL","thumbnail_url","replace","TwitchContext","createContext","TwitchContextProvider","props","useState","games","setGames","error","setError","streams","setStreams","clips","setClips","choosenStreams","setChoosenStreams","setUserID","userVideos","setUserVideos","userDetails","setUserDetails","isLoading","setIsLoading","id","setID","useReducer","pages","dispatch","useEffect","a","async","get","gamesArray","data","streamsArray","choosenStreamsArray","game","box_art_url","message","fetchData","Provider","value","handleChangeStreamID","getUserData","ID","userVideosArray","slice","video","children","ClipList","width","height","className","clip","key","src","embed_url","concat","title","frameBorder","scrolling","allowFullScreen","StreamList","length","useContext","Number","to","onClick","user_id","alt","user_name","viewer_count","toLocaleString","GameList","name","Spinner","Title","HomeHeader","Navigation","isOpen","setIsOpen","handleToggle","TopStreams","TopGames","findGameName","find","toUpperCase","ItemCarousel","items","this","undefined","i","href","url","target","rel","view_count","duration","Component","ChannelPopularStream","mostPopularStream","style","display","Channel","sliderEl","document","querySelectorAll","Swiper","init","slidesPerView","loop","spaceBetween","observer","breakpoints","1560","1145","768","468","320","pagination","el","clickable","navigation","nextEl","prevEl","mousewheel","keyboard","arrayWithStreamViews","maxWatchedStream","Math","max","indexOf","getMostViewedStream","profile_image_url","display_name","margin","Footer","xmlns","role","viewBox","d","NoMatch","justifyContent","alignItems","flexDirection","marginTop","color","textDecoration","paddingTop","fontSize","withRouter","window","scrollTo","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,sC,kVCA9BC,EAAgB,SAACC,EAAOC,GACnC,OAAQA,EAAOC,MACb,IAAK,mBACH,OAAOF,EAAQ,EAGjB,QACE,OAAOA,I,QCGEG,E,OANLC,EAAMC,OAAO,CACrBC,QAAS,CACP,YAJcC,oCCKLC,EAAe,SAACC,GAAD,OAASA,EAAIC,KAAI,SAAAC,GACzC,IAAIC,EAASD,EAAOE,cAAcC,QAAQ,UAAU,OAAOA,QAAQ,WAAW,OAC9E,OAAOH,EAAOE,cAAgBD,MCJrBG,EAAgBC,0BA6GdC,EA3Ge,SAAAC,GAAU,IAAD,EACXC,mBAAS,IADE,mBAC9BC,EAD8B,KACvBC,EADuB,OAEXF,mBAAS,IAFE,mBAE9BG,EAF8B,KAEvBC,EAFuB,OAGPJ,mBAAS,IAHF,mBAG9BK,EAH8B,KAGrBC,EAHqB,OAIXN,mBAAS,IAJE,mBAI9BO,EAJ8B,KAIvBC,EAJuB,OAKOR,mBAAS,IALhB,mBAK9BS,EAL8B,KAKdC,EALc,OAOTV,mBAAS,IAPA,mBAOtBW,GAPsB,aAQDX,mBAAS,IARR,mBAQ9BY,EAR8B,KAQlBC,EARkB,OASCb,mBAAS,IATV,mBAS9Bc,EAT8B,KASjBC,EATiB,OAWHf,oBAAS,GAXN,mBAW9BgB,EAX8B,KAWnBC,EAXmB,OAYjBjB,mBAAS,SAZQ,mBAY9BkB,EAZ8B,KAY1BC,EAZ0B,OAcXC,qBAAWxC,EAAe,IAdf,mBAc9ByC,EAd8B,KAcvBC,EAduB,KAiBrCC,qBAAU,YACU,+BAAAC,EAAAC,OAAA,uDAEhBR,GAAa,GAFG,oBAAAO,EAAA,MAKMxC,EAAI0C,IAAI,0CALd,cAKRzB,EALQ,kBAAAuB,EAAA,MAMQxC,EAAI0C,IAAJ,oDAAqDL,KAN7D,cAMRhB,EANQ,mBAAAmB,EAAA,MAOMxC,EAAI0C,IAAJ,oDAAqDR,EAArD,cAPN,eAORX,EAPQ,mBAAAiB,EAAA,MAQexC,EAAI0C,IAAJ,sDAAuDR,KARtE,QAQRT,EARQ,OAUVkB,EAAa1B,EAAM2B,KAAKA,KACxBC,EAAexB,EAAQuB,KAAKA,KAC5BE,EAAsBrB,EAAemB,KAAKA,KAGAD,EDvCjBpC,KAAI,SAAAwC,GACrC,IAAItC,EAASsC,EAAKC,YAAYrC,QAAQ,UAAU,OAAOA,QAAQ,WAAW,OAC1E,OAAOoC,EAAKC,YAAcvC,KCuCiBJ,EAAawC,GAENxC,EAAayC,GAE3D5B,EAASyB,GACTrB,EAAWuB,GACXrB,EAASD,EAAMqB,KAAKA,MACpBlB,EAAkBoB,GAClBb,GAAa,GAzBC,kDA4BdA,GAAa,GACbb,EAAS,KAAM6B,SA7BD,yDAiClBC,KACC,CAACb,EAAOH,IAiCX,OACE,kBAACtB,EAAcuC,SAAf,CAAwBC,MAAO,CAC3BnC,QACAI,UACAE,QACAc,QACAlB,QACAM,iBACAa,WACAe,qBAbuB,SAACnB,GAC5BC,EAAMD,IAaFA,KACAF,YACAsB,YA1Cc,SAAMC,GAAN,mBAAAf,EAAAC,OAAA,uDAClBR,GAAa,GADK,SAIdN,EAAU4B,GAJI,WAAAf,EAAA,MAMYxC,EAAI0C,IAAJ,+CAAgDa,KAN5D,cAMRzB,EANQ,kBAAAU,EAAA,MAOWxC,EAAI0C,IAAJ,qDAAsDa,KAPjE,OAOR3B,EAPQ,OASV4B,EAAkB5B,EAAWgB,KAAKA,KAAKa,MAAM,EAAE,IAGUD,ED9DzBjD,KAAI,SAAAmD,GAC5C,IAAIjD,EAASiD,EAAMhD,cAAcC,QAAQ,WAAW,OAAOA,QAAQ,YAAY,OAC/E,OAAO+C,EAAMhD,cAAgBD,KC8DzBsB,EAAeD,EAAYc,KAAKA,MAChCf,EAAc2B,GACdvB,GAAa,GAhBC,kDAoBdA,GAAa,GACbb,EAAS,KAAM6B,SArBD,0DA2CdnB,cACAF,eAGDb,EAAM4C,WClFEC,EAzBG,SAAC,GAA4B,IAA3BrC,EAA0B,EAA1BA,MAAOsC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAC9B,OACI,yBAAKC,UAAU,uBACbxC,EACAA,EAAMhB,KAAI,SAAAyD,GAAI,OACV,yBACED,UAAU,2BACVE,IAAKD,EAAK9B,IAEV,4BACEgC,IAAKF,EAAKG,UAAUC,OAAO,mBAC3BC,MAAOL,EAAKK,MACZR,MAAOA,GAAc,MACrBC,OAAQA,GAAgB,MACxBQ,YAAY,IACZC,UAAU,KACVC,iBAAiB,QAIvB,OCoDGC,G,YApEK,SAAC,GAAuB,IAAtBpD,EAAqB,EAArBA,QAASqD,EAAY,EAAZA,OAClBpB,EAAgBqB,qBAAW/D,GAA3B0C,YACT,OACQ,yBAAKS,UAAU,yBACVW,EAEGrD,EAAQoC,MAAM,EAAEmB,OAAOF,IAASnE,KAAI,SAAAC,GAAM,OAC9C,kBAAC,IAAD,CACIqE,GAAE,WACFd,UAAU,6BACVE,IAAKzD,EAAO0B,GACZ4C,QAAU,kBAAKxB,EAAY9C,EAAOuE,WAElC,yBACAhB,UAAU,kCACVG,IAAK1D,EAAOE,cACZsE,IAAI,SAEJ,yBAAKjB,UAAU,qCACdvD,EAAO6D,OAER,yBAAKN,UAAU,oCACdvD,EAAOyE,WAER,yBAAKlB,UAAU,uCACdvD,EAAO0E,aAAaC,eAAe,MADpC,YAGA,yBAAKpB,UAAU,oCACdvD,EAAOT,UAORsB,EAAQd,KAAI,SAAAC,GAAM,OACtB,kBAAC,IAAD,CACIqE,GAAE,WACFd,UAAU,6BACVE,IAAKzD,EAAO0B,GACZ4C,QAAU,kBAAKxB,EAAY9C,EAAOuE,WAElC,yBACAhB,UAAU,kCACVG,IAAK1D,EAAOE,cACZsE,IAAI,SAEJ,yBAAKjB,UAAU,qCACdvD,EAAO6D,OAER,yBAAKN,UAAU,oCACdvD,EAAOyE,WAER,yBAAKlB,UAAU,uCACdvD,EAAO0E,aAAaC,eAAe,MADpC,YAGA,yBAAKpB,UAAU,oCACdvD,EAAOT,aClCbqF,EAxBE,SAAC,GAAa,IAAZnE,EAAW,EAAXA,MACVoC,EAAwBsB,qBAAW/D,GAAnCyC,qBAEL,OACI,yBAAKU,UAAU,uBACd9C,EAAMwC,MAAM,EAAG,GAAGlD,KAAI,SAAAwC,GAAI,OACzB,kBAAC,IAAD,CACE8B,GAAE,aACFd,UAAU,2BACVE,IAAKlB,EAAKb,GACV4C,QAAS,kBAAIzB,EAAqBN,EAAKb,MAEvC,yBACE6B,UAAU,gCACVG,IAAKnB,EAAKC,YACVgC,IAAI,SAEN,yBAAKjB,UAAU,kCAAkChB,EAAKsC,YCTnDC,G,MAVE,WACb,OACI,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,UACb,gDCDGwB,EAJD,SAAC,GAAa,IAAZlB,EAAW,EAAXA,MACZ,OAAO,wBAAIN,UAAU,SAASM,ICiCnBmB,EAzBI,WAAO,IAAD,EAC6Bb,qBAAW/D,GAAvDK,EADe,EACfA,MAAOI,EADQ,EACRA,QAASE,EADD,EACCA,MAAOS,EADR,EACQA,UAAWb,EADnB,EACmBA,MAE1C,OAAGa,EACM,kBAAC,EAAD,MAGNb,EACI,2BAAIA,GAIT,oCACE,kBAAC,EAAD,CAAOkD,MAAM,qBACb,kBAAC,EAAD,CAAUpD,MAAOA,IACjB,wBAAI8C,UAAU,cACd,kBAAC,EAAD,CAAOM,MAAM,yBACb,kBAAC,EAAD,CAAYhD,QAASA,EAASqD,OAAO,OACrC,wBAAIX,UAAU,cACd,kBAAC,EAAD,CAAOM,MAAM,uBACb,kBAAC,EAAD,CAAU9C,MAAOA,M,cC1BR,SAASkE,IAAc,IAAD,EACLzE,oBAAS,GADJ,mBAC1B0E,EAD0B,KAClBC,EADkB,KAG3BC,EAAe,WACjBD,GAAWD,IAGf,OACI,4BAAQ3B,UAAU,iBACd,kBAAC,IAAD,CAAMc,GAAI,eACR,wBAAId,UAAU,0BAAd,sBAEF,4BACEhE,KAAK,SACLgE,UAAU,UACVe,QAASc,GAET,kBAAC,IAAD,CAAc7B,UAAU,cAE1B,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CACEc,GAAI,eACJd,UAAU,6BAFZ,eAKA,kBAAC,IAAD,CACEc,GAAI,aACJd,UAAU,6BAFZ,aAKA,kBAAC,IAAD,CACEc,GAAI,cACJd,UAAU,6BAFZ,SAMJ,wBACEe,QAASc,EACT7B,UAAW2B,EAAO,qBAAqB,aACrC,wBAAI3B,UAAU,mBACZ,kBAAC,IAAD,CACEc,GAAG,eADL,SAKF,wBAAId,UAAU,kCACd,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CACEc,GAAG,gBADL,gBAKJ,wBAAId,UAAU,kCACd,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CACEc,GAAG,cADL,gB,UCnCJgB,EAjBG,WAAO,IAAD,EACSlB,qBAAW/D,GAAjCS,EADa,EACbA,QAASiB,EADI,EACJA,SACjB,OACI,6BACI,wBAAIyB,UAAU,SAAS1C,EAAQqD,OAA/B,yBACoB,IAAnBrD,EAAQqD,OACR,kBAAC,EAAD,MACA,oCACA,kBAAC,EAAD,CAAYrD,QAASA,IACtB,4BAAQ0C,UAAU,mBAAmBe,QAAS,kBAAMxC,EAAS,CAACvC,KAAK,uBAAnE,gBC6BI+F,G,MArCC,WAAO,IAAD,EACwDnB,qBAAW/D,GAAhFK,EADa,EACbA,MAAOQ,EADM,EACNA,eAAgBF,EADV,EACUA,MAAO8B,EADjB,EACiBA,qBAAqBnB,EADtC,EACsCA,GAAIF,EAD1C,EAC0CA,UAEzD+D,EAAe9E,EAAM+E,MAAK,SAAAjD,GAAI,OAAIA,EAAKb,KAAOA,KAClD,OACI,yBAAK6B,UAAU,mBACX,wBAAIA,UAAU,SAAd,sBACA,yBAAKA,UAAU,uBACV9C,EAAMwC,MAAM,EAAG,IAAIlD,KAAI,SAAAwC,GAAI,OAC5B,yBACIgB,UAAW7B,IAAMa,EAAKb,GAAG,qCAAqC,2BAC9D+B,IAAKlB,EAAKb,GACV4C,QAAS,kBAAMzB,EAAqBN,EAAKb,MAE7C,yBACI6B,UAAU,gCACVG,IAAKnB,EAAKC,YACVgC,IAAI,SAER,yBAAKjB,UAAU,kCAAkChB,EAAKsC,WAItD,wBAAItB,UAAU,SAAd,6BAAgD,6BAAS,6BAAzD,IAAoEgC,EAAcA,EAAaV,KAAKY,cAAe,KAAM,IAAzH,IAA+HxE,EAAeiD,OAA9I,KACC1C,EACA,6BAAK,kBAAC,EAAD,OAGN,yBAAK+B,UAAU,gCACf,kBAAC,EAAD,CAAY1C,QAASI,IACrB,kBAAC,EAAD,CAAUF,MAAOA,EAAOuC,OAAQ,MAAOD,MAAO,Y,wDCU/CqC,G,uLAxCX,IAAMC,EAAQC,KAAKrF,MAAMoF,MAEzB,YACYE,IAAVF,GACiB,IAAjBA,EAAMzB,OAEC,2CAGL,yBAAKX,UAAU,sBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,2BAA2BqC,KAAKrF,MAAMsD,OAGpD,yBAAKN,UAAU,kBACZqC,KAAKrF,MAAMoF,MAAM5F,KAAI,SAACmD,EAAO4C,GAAR,OACpB,uBAAGrC,IAAKP,EAAMxB,GAAI6B,UAAU,eAAgBwC,KAAI,UAAK7C,EAAM8C,KAAOC,OAAO,SAASC,IAAI,uBACpF,6BACA,yBACE3C,UAAU,sBACVG,IAAKR,EAAMhD,cACXsE,IAAI,SAEJ,wBAAIjB,UAAU,uBAAuBL,EAAMiD,WAA3C,WAEF,wBAAI5C,UAAU,uBAAuBL,EAAMW,OAC3C,wBAAIN,UAAU,0BAA0BL,EAAMkD,SAASjG,QAAQ,IAAI,MAAMA,QAAQ,IAAK,YAM5F,yBAAKoD,UAAU,uBACf,yBAAKA,UAAU,6B,GAtCA8C,cC4BZC,G,MA7Bc,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,kBAC3B,OACI,uBAAIC,MAAO,CAACC,QAAQ,SAChBV,KAAI,UAAKQ,EAAkBP,KAC3BC,OAAO,SACPC,IAAI,sBACJ3C,UAAU,8BAEF,yBACAA,UAAU,kCACVG,IAAK6C,EAAkBrG,cACvBsE,IAAI,SAEJ,yBAAKjB,UAAU,qCACdgD,EAAkB1C,OAEnB,yBAAKN,UAAU,oCACdgD,EAAkB9B,WAEnB,yBAAKlB,UAAU,uCACdgD,EAAkBJ,WADnB,UAGA,yBAAK5C,UAAU,oCACdgD,EAAkBhH,SCyExBmH,EA1FC,WAAO,IAAD,EAC0BvC,qBAAW/D,GAAjDkB,EADY,EACZA,YAAaF,EADD,EACCA,WAAYI,EADb,EACaA,UAEjCO,qBAAU,WAEN,IAAM4E,EAAWC,SAASC,iBAAiB,qBAC3C,GAAKF,EAIM,IAAIG,IAAOH,EAAU,CAClCI,MAAM,EACNC,cAAe,EACfC,MAAM,EACNC,aAAc,GACdC,UAAU,EAEVC,YAAa,CACXC,KAAM,CACJL,cAAe,GAEjBM,KAAM,CACJN,cAAe,GAEjBO,IAAK,CACHP,cAAe,GAEjBQ,IAAK,CACHR,cAAe,GAEjBS,IAAK,CACHT,cAAe,IAGnBU,WAAY,CACVC,GAAI,qBACJC,WAAW,GAEbC,WAAY,CACVC,OAAQ,sBACRC,OAAQ,uBAEVC,YAAY,EACZC,UAAU,OAIZ,IAOM1B,EAPsB,WAC1B,IAAM2B,EAAuB9G,EAAWrB,KAAI,SAAAmD,GAAK,OAAIA,EAAMiD,cACrDgC,EAAmBC,KAAKC,IAAL,MAAAD,KAAI,YAAQF,IAErC,OADgCA,EAAqBI,QAAQH,GAIrCI,GAIxB,OAAI/G,EACG,kBAAC,EAAD,MAIH,6BAAS+B,UAAU,qBACjB,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,kCACb,yBACEA,UAAU,wCACVG,IAAKpC,EAAY,GAAGkH,kBACpBhE,IAAI,SAEN,yBAAKjB,UAAU,sCACb,yBAAKA,UAAU,4CAAf,cAAqE,gCAASjC,EAAY,GAAGmH,cAA7F,aACA,yBAAKlF,UAAU,4CAAf,yBAAgF,uBAAGA,UAAU,OAAOwC,KAAI,gCAA2BzE,EAAY,GAAGmH,cAAgBxC,OAAO,SAASC,IAAI,uBAAtG,sBAChF,wBAAI3C,UAAU,gCAAgCiD,MAAO,CAACkC,OAAO,YAC7D,yBAAKnF,UAAU,6CAAf,gBAAyEjC,EAAY,GAAG6E,WAAWxB,eAAe,OAClH,yBAAKpB,UAAU,kDAAf,yBAGJ,yBAAKA,UAAU,yCACX,kBAAC,EAAD,CAAsBgD,kBAAmBnF,EAAWmF,OAG5D,4BAAKjF,EAAY,GAAGmH,aAApB,YACA,kBAAC,EAAD,CAAc9C,MAAOvE,MCvCduH,G,MAjDA,WAEP,OACI,4BAAQpF,UAAU,oBACd,yBAAKA,UAAU,2BACX,wBAAIA,UAAU,oCACV,kBAAC,IAAD,CAAMA,UAAU,cAAcc,GAAI,eAClC,qCAIA,kBAAC,IAAD,CAAMd,UAAU,cAAcc,GAAI,YAClC,qCAIA,kBAAC,IAAD,CAAMd,UAAU,cAAcc,GAAI,gBAClC,4CAIA,kBAAC,IAAD,CAAMd,UAAU,cAAcc,GAAI,cAClC,2CAKJ,wBAAId,UAAU,oCACV,4BACI,uBAAGwC,KAAK,8BAA8BE,OAAO,SAASC,IAAI,uBAAsB,yBAAK0C,MAAM,6BAA6BC,KAAK,MAAMC,QAAQ,aAAY,4CAAwB,0BAAMC,EAAE,gtBAG3L,4BACI,uBAAGhD,KAAK,mCAAmCE,OAAO,SAASC,IAAI,uBAC/D,yBAAK0C,MAAM,6BAA6BE,QAAQ,eAAc,iDAA6B,0BAAMC,EAAE,4RAIvG,4BAAI,uBAAGhD,KAAK,8BAA8BE,OAAO,SAASC,IAAI,uBAC1D,yBAAK0C,MAAM,6BAA6BC,KAAK,MAAMC,QAAQ,aAAY,4CAAwB,0BAAMC,EAAE,wNAInH,yBAAKxF,UAAU,2BAAf,8C,iBChCDyF,MAXd,WACG,OACI,yBAAKxC,MAAO,CAACnD,MAAO,OAAQoD,QAAS,OAAQwC,eAAe,SAAUC,WAAW,SAAUC,cAAe,SAAUT,OAAO,WACvH,yBAAKhF,IAAK/C,IAAO6D,IAAI,YAAYgC,MAAO,CAACnD,MAAM,MAAO+F,UAAU,UAChE,kBAAC,IAAD,CAAM5C,MAAO,CAAC6C,MAAM,OAAQC,eAAe,OAAQC,WAAW,QAASlF,GAAI,KAA3E,8BACA,uBAAG0B,KAAK,uDAAuDS,MAAO,CAACgD,SAAU,MAAOH,MAAM,OAAQD,UAAU,SAAhH,gECIGK,eAVK,SAAClJ,GAOjB,OAJFwB,qBAAU,WACN2H,OAAOC,SAAS,EAAE,KACnB,CAACpJ,IAEKA,EAAM4C,YCuBFyG,MArBf,WAEE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAW/E,IAC3C,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,eAAeC,UAAW1E,IAC5C,kBAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,aAAaC,UAAWzE,IAC1C,kBAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,YAAYC,UAAWrD,IACzC,kBAAC,IAAD,CAAOqD,UAAWf,KAEtB,kBAAC,EAAD,UCdUgB,QACW,cAA7BN,OAAOO,SAASC,UAEe,UAA7BR,OAAOO,SAASC,UAEhBR,OAAOO,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASzD,SAAS0D,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6d0fe9b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error404.872a7ac1.jpg\";","export const twitchReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_MORE_ITEMS\": // init zrobiłem w samym context, tutaj bede sobie dodowac inne akcje\r\n      return state + 8;\r\n    // case \"FETCH_USER_DATA\":\r\n    //   return action.ID;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst client_id = process.env.REACT_APP_TWITCH_KEY;\r\n\r\nlet api = axios.create({\r\n  headers: {\r\n    \"Client-ID\": client_id\r\n  }\r\n});\r\n\r\nexport default api;\r\n","\r\nexport const getImage = (arr) => arr.map(game => {\r\n    let newURL = game.box_art_url.replace('{width}','150').replace('{height}','200');\r\n    return game.box_art_url = newURL;\r\n})\r\n\r\n\r\nexport const getThumbnail = (arr) => arr.map(stream => {\r\n    let newURL = stream.thumbnail_url.replace('{width}','350').replace('{height}','200');\r\n    return stream.thumbnail_url = newURL;\r\n})\r\n\r\nexport const getThumbnailURL = (arr) => arr.map(video => {\r\n    let newURL = video.thumbnail_url.replace('%{width}','350').replace('%{height}','200')\r\n    return video.thumbnail_url = newURL;\r\n})\r\n\r\n\r\n\r\n\r\n","import React, { createContext, useEffect, useState, useReducer } from \"react\";\r\nimport { twitchReducer } from \"../reducers/twitchReducer\";\r\nimport api from \"../api\";\r\nimport { getImage, getThumbnail, getThumbnailURL} from \"../utils\";\r\n\r\nexport const TwitchContext = createContext();\r\n\r\nconst TwitchContextProvider = props => {\r\n  const [games, setGames] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [streams, setStreams] = useState([]);\r\n  const [clips, setClips] = useState([]);\r\n  const [choosenStreams, setChoosenStreams] = useState([]);\r\n\r\n  const [userID, setUserID] = useState('');\r\n  const [userVideos, setUserVideos] = useState([]);\r\n  const [userDetails, setUserDetails] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [id, setID] = useState('32399');\r\n\r\n  const [pages, dispatch] = useReducer(twitchReducer, 20);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const games = await api.get(\"https://api.twitch.tv/helix/games/top\");\r\n        const streams = await api.get(`https://api.twitch.tv/helix/streams?first=${pages}`);\r\n        const clips = await api.get(`https://api.twitch.tv/helix/clips?game_id=${id}&first=8`);\r\n        const choosenStreams = await api.get(`https://api.twitch.tv/helix/streams?game_id=${id}`);\r\n\r\n        let gamesArray = games.data.data;\r\n        let streamsArray = streams.data.data;\r\n        let choosenStreamsArray = choosenStreams.data.data;\r\n  \r\n        // eslint-disable-next-line\r\n        let gamesArrayWithCertainImageSize = getImage(gamesArray); //getImage is imported from util.js\r\n        // eslint-disable-next-line\r\n        let streamsArrayWithCertainImageSize = getThumbnail(streamsArray);\r\n        // eslint-disable-next-line\r\n        let certainStreamsArrayWithCertainImageSize = getThumbnail(choosenStreamsArray);\r\n      \r\n        setGames(gamesArray);\r\n        setStreams(streamsArray);\r\n        setClips(clips.data.data);\r\n        setChoosenStreams(choosenStreamsArray);\r\n        setIsLoading(false);\r\n  \r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        setError(error.message);\r\n      }\r\n\r\n    };\r\n    fetchData();\r\n  }, [pages, id]);\r\n\r\n\r\n  const getUserData = async(ID) => {\r\n    setIsLoading(true);\r\n   \r\n      try {\r\n        setUserID(ID);\r\n      \r\n        const userDetails = await api.get(`https://api.twitch.tv/helix/users?id=${ID}`);\r\n        const userVideos = await api.get(`https://api.twitch.tv/helix/videos?user_id=${ID}`);\r\n\r\n        let userVideosArray = userVideos.data.data.slice(1,12);\r\n\r\n          // eslint-disable-next-line\r\n        let certainVideosArrayWithCertainImageSize = getThumbnailURL(userVideosArray);\r\n\r\n        setUserDetails(userDetails.data.data);\r\n        setUserVideos(userVideosArray);\r\n        setIsLoading(false);\r\n        \r\n      }\r\n      catch (error) {\r\n        setIsLoading(false);\r\n        setError(error.message)\r\n      }\r\n  }\r\n\r\n\r\n  const handleChangeStreamID = (id) => {\r\n    setID(id)\r\n  }\r\n\r\n  return (\r\n    <TwitchContext.Provider value={{ \r\n        games, \r\n        streams, \r\n        clips, \r\n        pages, \r\n        error, \r\n        choosenStreams, \r\n        dispatch, \r\n        handleChangeStreamID,\r\n        id,\r\n        isLoading, \r\n        getUserData, \r\n        userDetails, \r\n        userVideos,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TwitchContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TwitchContextProvider;\r\n","import React from 'react'\r\n\r\n const ClipList = ({clips, width, height}) => {\r\n    return (\r\n        <div className=\"top-clips-container\">\r\n        { clips? \r\n          clips.map(clip => (\r\n              <div\r\n                className=\"top-clips-container-item\"\r\n                key={clip.id}\r\n              >\r\n                <iframe\r\n                  src={clip.embed_url.concat(\"&autoplay=false\")}\r\n                  title={clip.title}\r\n                  width={width? width :\"360\"}\r\n                  height={height? height :\"240\"}\r\n                  frameBorder=\"0\"\r\n                  scrolling=\"no\"\r\n                  allowFullScreen={true}\r\n                />\r\n              </div>\r\n            ))\r\n          : null}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ClipList;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TwitchContext } from '../../contexts/TwitchContext';\r\nimport './StreamList.scss';\r\n\r\n\r\n const StreamList = ({streams, length}) => {\r\n     const { getUserData } = useContext(TwitchContext);\r\n    return (\r\n            <div className=\"top-streams-container\">\r\n                {length?\r\n                (\r\n                    streams.slice(0,Number(length)).map(stream => (\r\n                <Link\r\n                    to={`/channel`}\r\n                    className=\"top-streams-container-item\"\r\n                    key={stream.id}\r\n                    onClick={ ()=> getUserData(stream.user_id)}\r\n                >\r\n                    <img\r\n                    className=\"top-streams-container-item__img\"\r\n                    src={stream.thumbnail_url}\r\n                    alt=\"game\"\r\n                    />\r\n                    <div className=\"top-streams-container-item__title\">\r\n                    {stream.title}\r\n                    </div>\r\n                    <div className=\"top-streams-container-item__name\">\r\n                    {stream.user_name}\r\n                    </div>\r\n                    <div className=\"top-streams-container-item__viewers\">\r\n                    {stream.viewer_count.toLocaleString('en')} viewers\r\n                    </div>\r\n                    <div className=\"top-streams-container-item__live\">\r\n                    {stream.type}\r\n                    </div>\r\n                </Link>\r\n                ))\r\n                \r\n                ):\r\n                (\r\n                    streams.map(stream => (\r\n                <Link\r\n                    to={`/channel`}\r\n                    className=\"top-streams-container-item\"\r\n                    key={stream.id}\r\n                    onClick={ ()=> getUserData(stream.user_id)}\r\n                >\r\n                    <img\r\n                    className=\"top-streams-container-item__img\"\r\n                    src={stream.thumbnail_url}\r\n                    alt=\"game\"\r\n                    />\r\n                    <div className=\"top-streams-container-item__title\">\r\n                    {stream.title}\r\n                    </div>\r\n                    <div className=\"top-streams-container-item__name\">\r\n                    {stream.user_name}\r\n                    </div>\r\n                    <div className=\"top-streams-container-item__viewers\">\r\n                    {stream.viewer_count.toLocaleString('en')} viewers\r\n                    </div>\r\n                    <div className=\"top-streams-container-item__live\">\r\n                    {stream.type}\r\n                    </div>\r\n                </Link>\r\n                ))\r\n                )}\r\n                \r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default StreamList","import React, { useContext } from 'react';\r\nimport { TwitchContext } from '../../contexts/TwitchContext';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst GameList = ({games}) => {\r\n  const {handleChangeStreamID} = useContext(TwitchContext);\r\n  \r\n    return (\r\n        <div className=\"top-games-container\">\r\n        {games.slice(0, 9).map(game => (\r\n          <Link\r\n            to={`/top-games`}\r\n            className=\"top-games-container-item\"\r\n            key={game.id}\r\n            onClick={()=>handleChangeStreamID(game.id)}\r\n          >\r\n            <img\r\n              className=\"top-games-container-item__img\"\r\n              src={game.box_art_url}\r\n              alt=\"game\"\r\n            />\r\n            <div className=\"top-games-container-item__name\">{game.name}</div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default GameList;\r\n","import React from 'react';\r\nimport './Spinner.scss';\r\n\r\n const Spinner = () => {\r\n    return (\r\n        <div className='wrapper'>\r\n          <div className=\"loader\">\r\n            <span>Loading...</span>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst Title = ({title}) => {\r\n    return <h2 className=\"title\">{title}</h2>\r\n}\r\n\r\nexport default Title\r\n","import React, { useContext } from \"react\";\r\nimport { TwitchContext } from \"../../contexts/TwitchContext\";\r\nimport ClipList from \"../ClipsList/ClipsList\";\r\nimport \"./HomeHeader.scss\";\r\nimport StreamList from \"../StreamList/StreamList\";\r\nimport GameList from \"../GameList/GameList\";\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Title from \"../Title/Title\";\r\n\r\n\r\n\r\nconst HomeHeader = () => {\r\n  const { games, streams, clips, isLoading, error } = useContext(TwitchContext);\r\n  \r\n  if(isLoading) {\r\n    return <Spinner />\r\n  }\r\n\r\n  if(error) {\r\n  return <p>{error}</p>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Title title='Top Stream Games'/>\r\n      <GameList games={games}/>\r\n      <hr className=\"separator\" />\r\n      <Title title='Most Popular Streams'/>\r\n      <StreamList streams={streams} length='10'/>\r\n      <hr className=\"separator\" />\r\n      <Title title='Most Popular Clips'/>\r\n      <ClipList clips={clips} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeHeader;\r\n","import React, { useState } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { FaAlignRight } from 'react-icons/fa';\r\nimport './Navigation.scss';\r\n\r\nexport default function Navigation() {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleToggle = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    return (\r\n        <header className=\"nav-container\">\r\n            <Link to={'/Twitch-API'}>\r\n              <h1 className=\"nav-container-app-name\">Twitch ReactBoard</h1>\r\n            </Link>\r\n            <button \r\n              type='button' \r\n              className='nav-btn'\r\n              onClick={handleToggle}\r\n              >\r\n              <FaAlignRight className='nav-icon'/>\r\n            </button>\r\n            <nav className=\"nav-container-links\" >\r\n                <NavLink \r\n                  to={'/top-streams'} \r\n                  className=\"nav-container-links__item\">\r\n                  Top Streams\r\n                </NavLink>\r\n                <NavLink \r\n                  to={'/top-games'} \r\n                  className=\"nav-container-links__item\">\r\n                  Top Games\r\n                </NavLink>\r\n                <NavLink \r\n                  to={'/Twitch-API'} \r\n                  className=\"nav-container-links__item\">\r\n                  Home\r\n                </NavLink>\r\n            </nav>\r\n            <ul \r\n              onClick={handleToggle} \r\n              className={isOpen?'nav-links show-nav':'nav-links'}>\r\n                <li className='nav-links__item'>\r\n                  <Link \r\n                    to='/Twitch-API'>\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <hr className=\"carousel-container__separator\" />\r\n                <li className='nav-links__item'>\r\n                    <Link \r\n                      to='/top-streams'>\r\n                      Top Streams\r\n                    </Link>\r\n                </li>\r\n                <hr className=\"carousel-container__separator\" />\r\n                <li className='nav-links__item'>\r\n                    <Link \r\n                      to='/top-games'>\r\n                      Top Games\r\n                    </Link>\r\n                </li>     \r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { TwitchContext, } from \"../../contexts/TwitchContext\";\r\nimport './TopStreams.scss'\r\nimport StreamList from '../StreamList/StreamList';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\n\r\nconst TopStreams = () => {\r\n    const { streams, dispatch } = useContext(TwitchContext);\r\n    return (\r\n        <div>\r\n            <h2 className=\"title\">{streams.length} Most Popular Streams</h2>\r\n            {streams.length === 0?\r\n            (<Spinner />) :\r\n            (<>\r\n             <StreamList streams={streams}/>\r\n            <button className=\"load-more-button\" onClick={() => dispatch({type:'FETCH_MORE_ITEMS'})}>Load more</button>\r\n            </>)\r\n            }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  TopStreams;\r\n","import React, { useContext } from 'react';\r\nimport { TwitchContext, } from \"../../contexts/TwitchContext\";\r\nimport './TopGames.scss'\r\nimport StreamList from '../StreamList/StreamList';\r\nimport ClipList from '../ClipsList/ClipsList';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\n\r\nconst TopGames = () => {\r\n  const { games, choosenStreams, clips, handleChangeStreamID,id, isLoading } = useContext(TwitchContext)\r\n\r\n  const findGameName = games.find(game => game.id === id)\r\n    return (\r\n        <div className=\"games-component\">\r\n            <h2 className=\"title\">Most Popular Games</h2>\r\n            <div className=\"top-games-container\">\r\n                {games.slice(0, 10).map(game => (\r\n                <div\r\n                    className={id=== game.id?'top-games-container-item is-active':'top-games-container-item'}\r\n                    key={game.id}\r\n                    onClick={() => handleChangeStreamID(game.id)}\r\n                >\r\n                <img\r\n                    className=\"top-games-container-item__img\"\r\n                    src={game.box_art_url}\r\n                    alt=\"game\"\r\n                />\r\n                <div className=\"top-games-container-item__name\">{game.name}</div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n                <h3 className=\"title\">Streams and Top Clips for <br></br><br></br> {findGameName? findGameName.name.toUpperCase(): null}{' '}({choosenStreams.length})</h3>\r\n                {isLoading ?\r\n                (<div><Spinner/></div>)\r\n                :\r\n                (\r\n                <div className=\"top-stream-and-clips-wrapper\">\r\n                <StreamList streams={choosenStreams}/>\r\n                <ClipList clips={clips} height={'300'} width={'500'}/>\r\n                </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  TopGames;","import React, { Component } from \"react\";\r\nimport \"./ItemCarousel.scss\";\r\n\r\nclass ItemCarousel extends Component {\r\n  \r\n\r\n  render() {\r\n    \r\n    const items = this.props.items;\r\n\r\n    if (\r\n      items === undefined ||\r\n      items.length === 0\r\n    ) {\r\n      return <div>Loading...</div>;\r\n    } else\r\n      return (\r\n        <div className=\"carousel-container\">\r\n          <div className=\"swiper-container\">\r\n            <h2 className=\"swiper-container__title\">{this.props.title}</h2>\r\n\r\n            {/* carousel item */}\r\n            <div className=\"swiper-wrapper\">\r\n              {this.props.items.map((video, i) => (\r\n                <a key={video.id} className=\"swiper-slide\"  href={`${video.url}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <div>\r\n                  <img\r\n                    className=\"swiper-slide__image\"\r\n                    src={video.thumbnail_url}\r\n                    alt=\"game\"\r\n                    />\r\n                    <h4 className=\"swiper-slide__views\">{video.view_count} views</h4>\r\n                  </div>\r\n                  <h3 className=\"swiper-slide__title\">{video.title}</h3>\r\n                  <h4 className=\"swiper-slide__duration\">{video.duration.replace('h','h ').replace('m', 'm ')}</h4>\r\n                  \r\n                </a>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"swiper-button-prev\"></div>\r\n            <div className=\"swiper-button-next\"></div>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default ItemCarousel;","import React from 'react';\r\n\r\nconst ChannelPopularStream = ({mostPopularStream}) => {\r\n    return (\r\n        <a  style={{display:'block'}}\r\n            href={`${mostPopularStream.url}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"top-streams-container-item\"\r\n        >\r\n                    <img\r\n                    className=\"top-streams-container-item__img\"\r\n                    src={mostPopularStream.thumbnail_url}\r\n                    alt=\"game\"\r\n                    />\r\n                    <div className=\"top-streams-container-item__title\">\r\n                    {mostPopularStream.title}\r\n                    </div>\r\n                    <div className=\"top-streams-container-item__name\">\r\n                    {mostPopularStream.user_name}\r\n                    </div>\r\n                    <div className=\"top-streams-container-item__viewers\">\r\n                    {mostPopularStream.view_count} views\r\n                    </div>\r\n                    <div className=\"top-streams-container-item__live\">\r\n                    {mostPopularStream.type}\r\n                    </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default ChannelPopularStream\r\n","import React, { useContext, useEffect} from 'react';\r\nimport { TwitchContext } from '../../contexts/TwitchContext';\r\nimport Swiper from 'swiper';\r\nimport ItemCarousel from './ItemCarousel/ItemCarousel';\r\nimport './Channel.scss';\r\nimport ChannelPopularStream from './ChannelPopularStream/ChannelPopularStream';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nconst Channel = () => {\r\n  const { userDetails, userVideos, isLoading} = useContext(TwitchContext);\r\n\r\n  useEffect(() => {\r\n\r\n      const sliderEl = document.querySelectorAll(\".swiper-container\");\r\n      if (!sliderEl) {\r\n        return;\r\n      }\r\n  // eslint-disable-next-line\r\n  const slider = new Swiper(sliderEl, {\r\n    init: true,\r\n    slidesPerView: 4,\r\n    loop: true,\r\n    spaceBetween: 10,\r\n    observer: true,\r\n\r\n    breakpoints: {\r\n      1560: {\r\n        slidesPerView: 4\r\n      },\r\n      1145: {\r\n        slidesPerView: 3\r\n      },\r\n      768: {\r\n        slidesPerView: 2\r\n      },\r\n      468: {\r\n        slidesPerView: 1\r\n      },\r\n      320: {\r\n        slidesPerView: 1\r\n      }\r\n    },\r\n    pagination: {\r\n      el: \".swiper-pagination\",\r\n      clickable: true\r\n    },\r\n    navigation: {\r\n      nextEl: \".swiper-button-next\",\r\n      prevEl: \".swiper-button-prev\"\r\n    },\r\n    mousewheel: true,\r\n    keyboard: true,\r\n  });\r\n  })\r\n\r\n  const getMostViewedStream = () => {\r\n    const arrayWithStreamViews = userVideos.map(video => video.view_count);\r\n    const maxWatchedStream = Math.max(...arrayWithStreamViews);\r\n    const indexOfmaxWatchedStream = arrayWithStreamViews.indexOf(maxWatchedStream);\r\n    return indexOfmaxWatchedStream\r\n  }\r\n\r\n  const mostPopularStream = getMostViewedStream(userVideos)\r\n\r\n \r\n\r\n    if (isLoading) {\r\n    return <Spinner />\r\n    }\r\n\r\n    return (\r\n        <section className=\"channel-container\">\r\n          <div className=\"channel-container-profile\">\r\n            <div className=\"channel-container-profile-info\">\r\n              <img\r\n                className=\"channel-container-profile-info__image\"\r\n                src={userDetails[0].profile_image_url}\r\n                alt=\"game\"\r\n              />\r\n              <div className=\"channel-container-profile-info-box\">\r\n                <div className=\"channel-container-profile-info-box__name\">Welcome in <strong>{userDetails[0].display_name}</strong> channel!</div>\r\n                <div className=\"channel-container-profile-info-box__live\">Click For Live Stream <a className='link' href={`https://www.twitch.tv/${userDetails[0].display_name}`} target='_blank' rel='noopener noreferrer'>TWITCH LIVE HERE!</a></div>\r\n                <hr className=\"carousel-container__separator\" style={{margin:'10px 0'}}/>\r\n                <div className=\"channel-container-profile-info-box__views\">Total views: {userDetails[0].view_count.toLocaleString('en')}</div>\r\n                <div className=\"channel-container-profile-info-box__highlights\">Most Popular Stream</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"channel-container-profile__highlights\">\r\n                <ChannelPopularStream mostPopularStream={userVideos[mostPopularStream]} />\r\n              </div>\r\n          </div>\r\n        <h2>{userDetails[0].display_name} Streams</h2>\r\n        <ItemCarousel items={userVideos}/>\r\n      </section>\r\n      \r\n    )\r\n}\r\n\r\nexport default Channel;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => {\r\n  \r\n        return (\r\n            <footer className=\"footer-container\">\r\n                <div className=\"footer-container-header\">\r\n                    <ul className=\"footer-container-header__1column\">\r\n                        <Link className=\"column_link\" to={'/Twitch-API'}>\r\n                        <li>\r\n                            HOME\r\n                        </li>\r\n                        </Link>\r\n                        <Link className=\"column_link\" to={'/profile'}>\r\n                        <li>\r\n                            USER\r\n                        </li>\r\n                        </Link>\r\n                        <Link className=\"column_link\" to={'/top-streams'}>\r\n                        <li>\r\n                            TOP STREAMS\r\n                        </li>\r\n                        </Link>\r\n                        <Link className=\"column_link\" to={'/top-games'}>\r\n                        <li>\r\n                            TOP GAMES\r\n                        </li>\r\n                        </Link>\r\n                    </ul>\r\n                    <ul className=\"footer-container-header__2column\">\r\n                        <li>\r\n                            <a href=\"https://github.com/Postimal\" target=\"_blank\" rel='noreferrer noopener'><svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>My Github</title><path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/></svg>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"https://www.facebook.com/Twitch/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><title>Twitch profile</title><path d=\"M426.8 64H85.2C73.5 64 64 73.5 64 85.2v341.6c0 11.7 9.5 21.2 21.2 21.2H256V296h-45.9v-56H256v-41.4c0-49.6 34.4-76.6 78.7-76.6 21.2 0 44 1.6 49.3 2.3v51.8h-35.3c-24.1 0-28.7 11.4-28.7 28.2V240h57.4l-7.5 56H320v152h106.8c11.7 0 21.2-9.5 21.2-21.2V85.2c0-11.7-9.5-21.2-21.2-21.2z\"/></svg>\r\n                            </a>\r\n                        </li>\r\n                       \r\n                        <li><a href=\"mailto:michal.postek1@wp.pl\" target=\"_blank\" rel='noreferrer noopener'>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>e-mail me</title><path d=\"M24 4.5v15c0 .85-.65 1.5-1.5 1.5H21V7.387l-9 6.463-9-6.463V21H1.5C.649 21 0 20.35 0 19.5v-15c0-.425.162-.8.431-1.068C.7 3.16 1.076 3 1.5 3H2l10 7.25L22 3h.5c.425 0 .8.162 1.069.432.27.268.431.643.431 1.068z\"/></svg></a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"footer-container-bottom\">Michał Postek, Copyright &copy; 2019</div>\r\n            </footer>\r\n        )\r\n    \r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport error from './error404.jpg';\r\n\r\n function NoMatch() {\r\n    return (\r\n        <div style={{width: '80vw', display: 'flex', justifyContent:'center', alignItems:'center', flexDirection: \"column\", margin:\"0 auto\"}}>\r\n            <img src={error} alt=\"wrong url\" style={{width:'80%', marginTop:'50px'}}/>\r\n            <Link style={{color:'#ddd', textDecoration:'none', paddingTop:'20px'}} to={'/'}>Click and go back to Home!</Link>\r\n            <a href=\"https://www.freepik.com/free-photos-vectors/business\" style={{fontSize: '2vw', color:'#555', marginTop:'80px'}}>Business vector created by pikisuperstar - www.freepik.com</a>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default NoMatch","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst ScrollToTop = (props) => {\r\n\r\n//  przy zmianie route dajemy okno na sama góre, np przy click Link w navbar ładowala sie nowa strona a uzytkownik zostawał na samym dole okna\r\n  useEffect(() => {\r\n      window.scrollTo(0,0)\r\n  }, [props])\r\n  \r\n    return(props.children)\r\n}\r\n\r\nexport default withRouter(ScrollToTop)","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport TwitchContextProvider from \"./contexts/TwitchContext\";\r\nimport HomeHeader from \"./components/HomeHeader/HomeHeader\";\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport TopStreams from \"./components/TopStreams/TopStreams\";\r\nimport TopGames from './components/TopGames/TopGames';\r\nimport Channel from './components/Channel/Channel';\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport NoMatch from './components/NoMatch/NoMatch';\r\nimport ScrollToTop from \"./components/ScrollToTop/ScrollToTop\";\r\n\r\nfunction App() {\r\n  //dorobić go back button, cssy na mobile\r\n  return (\r\n    <Router>\r\n      <TwitchContextProvider>\r\n        <ScrollToTop >\r\n          <Navigation />\r\n          <Switch>\r\n              <Route exact path=\"/Twitch-API\" component={HomeHeader} />\r\n              <Route exact path=\"/top-streams\" component={TopStreams} />\r\n              <Route exact path=\"/top-games\" component={TopGames} />\r\n              <Route exact path=\"/channel/\" component={Channel} />\r\n              <Route component={NoMatch} />\r\n          </Switch>\r\n          <Footer />\r\n        </ScrollToTop>\r\n      </TwitchContextProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}